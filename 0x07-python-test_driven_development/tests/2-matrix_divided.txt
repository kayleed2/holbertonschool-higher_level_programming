The text file to test file 2-matrix_divided.py
======================

Using ''matrix_divided''
-------------------

This is a test file to test the 2-matrix_divided.py function matrix_divide
First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Now use it:

Simple use:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Zero Division:    
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    
Different size:
    >>> matrix_divided([[1, 2], [1, 2, 3]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Divide by String:    
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "testing")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Matrix of non-ints:
    >>> matrix_divided([["testing", 1, 2], [1, 2, 3]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
Matrix with floats:
    >>> matrix_divided([[1.5, 5.8], [2.7, 6.9]], 3)
    [[0.5, 1.93], [0.9, 2.3]]

 Matrix with negatives:   
    >>> matrix_divided([[1.5, 5.8], [2.7, 6.9]], -3)
    [[-0.5, -1.93], [-0.9, -2.3]]

Empty matrix:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

One Argument:
    >>> matrix_divided([2, 4, 4])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'